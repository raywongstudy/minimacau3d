import{calculateDistanceInDirection}from"./CoordinateUtils.js";export function initializeBusEvents(e,t,a){e.on("mousemove",(n=>{handleMouseMove(n,e,t,a)}))}function handleMouseMove(e,t,a,n){const s=e.lngLat;updatePopupAndCursor(findHoveredBus(calculateDistanceInDirection(parseFloat(s.lng),parseFloat(s.lat),a.longitude,a.latitude),a.cube_list,a),t,n,a.route_elements)}function findHoveredBus(e,t,a){let n;for(const s of t){n=s.userData.previousPosition?[s.userData.previousPosition.y,-s.userData.previousPosition.x]:calculateDistanceInDirection(parseFloat(s.userData.sourceLngLat[0]),parseFloat(s.userData.sourceLngLat[1]),a.longitude,a.latitude);const t=e[0]-n[0],o=e[1]-n[1];if(Math.sqrt(t*t+o*o)<25)return s}return null}function updatePopupAndCursor(e,t,a,n){if(e){const s="0"==e.userData.busDir?"去程":"回程";a.setLngLat(e.userData.currentLngLat).setHTML(`\n                <h3>巴士號: ${n.bus_name}</h3>\n                <p>車牌: ${e.userData.busPlate}</p>\n                <p>方向: ${s}</p>\n                <p>速度: ${e.userData.busSpeed} km/h</p>\n            `).addTo(t),t.getCanvas().style.cursor="pointer"}else a.remove(),t.getCanvas().style.cursor=""}