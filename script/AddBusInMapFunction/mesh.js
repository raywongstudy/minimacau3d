export function createBusMesh(e,t,n,o,a,s,i){const r=new THREE.Group;r.name=`bus_${s}_${i}_busGroup`;const E=new THREE.BoxGeometry(e,t,.8*n),c=new THREE.Mesh(E,a);c.name=`bus_${s}_${i}_bodyMesh`,c.position.set(0,0,.1*-n);const l=new THREE.EdgesGeometry(E),M=new THREE.LineSegments(l,new THREE.LineBasicMaterial({color:0,linewidth:5}));c.add(M),r.add(c);const w=new THREE.BoxGeometry(e,t,.1*n),h=a,d=new THREE.Mesh(w,h);d.name=`bus_${s}_${i}_roofMesh`,d.position.set(0,0,.5*-n),r.add(d);const H=.4*e,T=document.createElement("canvas"),R=T.getContext("2d");T.width=350,T.height=150,R.clearRect(0,0,350,150),R.font="bold 150px Arial",R.textAlign="center",R.textBaseline="middle",R.fillStyle="#ffffff",R.fillText(s.toString(),150,64);const _=new THREE.CanvasTexture(T),u=new THREE.MeshBasicMaterial({map:_,transparent:!0}),m=new THREE.PlaneGeometry(H,.5*H),B=new THREE.Mesh(m,u);B.name=`bus_${s}_${i}_numberMesh`,B.rotation.y=-Math.PI,B.position.set(0,0,.6*-n),r.add(B);const $=.18*n,p=.06*t;[[.35*e,-t/2-p/2,.25*n],[.35*-e,-t/2-p/2,.25*n],[.35*e,t/2+p/2,.25*n],[.35*-e,t/2+p/2,.25*n]].forEach(((e,t)=>{const n=createWheel($,p);n.name=`bus_${s}_${i}_wheel_${t}`,n.position.set(...e),r.add(n)}));const f=.02*t,y=createFrontWindow(.3*e,.5*n,f);y.name=`bus_${s}_${i}_frontWindow`,y.position.set(e/2+f/2,0,.2*-n),r.add(y);const b=.15*e,x=.4*n,G=.03*t,g=.22*e,P=.3*-e;for(let e=0;e<3;e++){const o=createSideWindow(b,x,G);o.name=`bus_${s}_${i}_sideWindow_left_${e}`,o.position.set(P+e*g,-t/2-G/2,.2*-n),r.add(o)}for(let e=0;e<3;e++){const o=createSideWindow(b,x,G);o.name=`bus_${s}_${i}_sideWindow_right_${e}`,o.position.set(P+e*g,t/2+G/2,.2*-n),r.add(o)}const W=.1*n,I=new THREE.SphereGeometry(W,16,16,0,2*Math.PI,0,.5*Math.PI),S=new THREE.MeshBasicMaterial({color:16777164}),C=new THREE.Mesh(I,S);C.name=`bus_${s}_${i}_leftHeadlight`,C.position.set(e/2,-t/4,.1*n),C.rotation.y=Math.PI/2,r.add(C);const L=new THREE.Mesh(I,S);L.name=`bus_${s}_${i}_rightHeadlight`,L.position.set(e/2,t/4,.1*n),L.rotation.y=Math.PI/2,r.add(L);const v=.4*t,A=.15*n,F=new THREE.BoxGeometry(.01,v,A),j=new THREE.MeshBasicMaterial({color:16777215}),k=new THREE.Mesh(F,j);k.name=`bus_${s}_${i}_frontLicensePlate`,k.position.set(e/2+.01,0,0),r.add(k);const q=new THREE.Mesh(F,j);return q.name=`bus_${s}_${i}_rearLicensePlate`,q.position.set(-e/2-.01,0,0),q.rotation.y=Math.PI,r.add(q),r.scale.set(o,o,o),r}function createWheel(e,t){const n=new THREE.CylinderGeometry(e,e,t,24),o=new THREE.MeshBasicMaterial({color:2236962}),a=new THREE.Mesh(n,o),s=.6*e,i=new THREE.CylinderGeometry(s,s,t+.01,8),r=new THREE.MeshBasicMaterial({color:8947848}),E=new THREE.Mesh(i,r);return a.add(E),a.rotation.x=Math.PI,a}function createFrontWindow(e,t,n){const o=new THREE.BoxGeometry(n,e,t),a=new THREE.MeshBasicMaterial({color:8956671,transparent:!0,opacity:.7});return new THREE.Mesh(o,a)}function createSideWindow(e,t,n){const o=new THREE.BoxGeometry(e,n,t),a=new THREE.MeshBasicMaterial({color:8956671,transparent:!0,opacity:.7});return new THREE.Mesh(o,a)}export function createBusMaterial(e,t){let n=[];return n=0==e?[new THREE.MeshBasicMaterial({color:t[0]}),new THREE.MeshBasicMaterial({color:t[0]}),new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[2]}),new THREE.MeshBasicMaterial({color:t[2]})]:[new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[1]}),new THREE.MeshBasicMaterial({color:t[0]}),new THREE.MeshBasicMaterial({color:t[0]})],n}