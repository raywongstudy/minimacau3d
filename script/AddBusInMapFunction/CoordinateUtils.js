import{AddMarker}from"./../tools/support.js";export function calculateDistanceInDirection(t,e,a,o){const n=(e+o)/2;return[111194*(o-e),111194*(a-t)*Math.cos(n*Math.PI/180)]}export function calculateCoordinateFromDistance(t,e,a,o){const n=o-t/111194,r=(n+o)/2*Math.PI/180;return[a-e/(111194*Math.cos(r)),n]}function getDistance(t,e){const[a,o]=t,[n,r]=e;return Math.sqrt(Math.pow(n-a,2)+Math.pow(r-o,2))}function findClosestIndex(t,e){let a=1/0,o=-1;return t.forEach(((t,n)=>{const r=getDistance(t,e);r<a&&(a=r,o=n)})),o}export function getPointsInTrafficData(t,e,a,o,n,r){a=a.toString().padStart(5,"0");const i=turf.distance(n,r);let l=Math.max(200,Math.min(500,Math.floor(1e3*i)));e.speed>50?l-=Math.min(100,Math.floor((e.speed-40)/60*1e3)):e.speed<=50&&(l+=Math.min(200,Math.floor((40-e.speed)/60*1e3)));l=Math.floor(.2*l);let c=window.traffic_data.find((t=>t.routeCode==a&&t.direction==o));if(!c||!c.coordinate){const e=calculateDistanceInDirection(parseFloat(n[0]),parseFloat(n[1]),parseFloat(t.longitude),parseFloat(t.latitude)),a=calculateDistanceInDirection(parseFloat(r[0]),parseFloat(r[1]),t.longitude,t.latitude);return[[(a[0]-e[0])/l,(a[1]-e[1])/l],[l]]}let s=window.routeUtils.getRoutePointsBetweenCoordinates(c,n,r);calculateDistanceInDirection(parseFloat(n[0]),parseFloat(n[1]),parseFloat(t.longitude),parseFloat(t.latitude)),calculateDistanceInDirection(parseFloat(r[0]),parseFloat(r[1]),t.longitude,t.latitude);let u=[];for(let e=0;e<s.length;e++){const a=calculateDistanceInDirection(parseFloat(s[e][0]),parseFloat(s[e][1]),t.longitude,t.latitude);u.push(a)}u=u.filter(((t,e,a)=>e===a.findIndex((e=>e[0]===t[0]&&e[1]===t[1]))));let d=[];for(let t=0;t<u.length-1;t++){const e=(u[t+1][0]-u[t][0])/l,a=(u[t+1][1]-u[t][1])/l;d.push([e,a])}return l=Array(u.length-1).fill(l),[d,l]}