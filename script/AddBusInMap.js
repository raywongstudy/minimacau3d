import{GenModelTransform}from"./AddBusInMapFunction/ModelTransformUtils.js";import{createBusMesh,createBusMaterial}from"./AddBusInMapFunction/mesh.js";import{calculateDistanceInDirection,getPointsInTrafficData,calculateCoordinateFromDistance}from"./AddBusInMapFunction/CoordinateUtils.js";import{createUpdateBusButton}from"./tools/support.js";import{calculateCameraMatrix,setCubeOrientation}from"./AddBusInMapFunction/TransformUtils.js";import{filterCurrentBusData}from"./AddBusInMapFunction/BusDataUtils.js";import{AddMarkerData}from"./tools/support.js";import{createPathLine,drawBusPathAndEndpoint}from"./AddBusInMapFunction/PathVisualizationUtils.js";import{initializeBusEvents}from"./AddBusInMapFunction/BusEventHandler.js";function getDistance(t,e){const[a,i]=t,[n,s]=e;return Math.sqrt(Math.pow(n-a,2)+Math.pow(s-i,2))}function findClosestIndex(t,e){let a=1/0,i=-1;return t.forEach(((t,n)=>{const s=getDistance(t,e);s<a&&(a=s,i=n)})),i}function findClosestPoint(t,e){let a=1/0,i=null;for(let n=0;n<t.length-1;n++){const s=t[n],o=t[n+1],r=e[1]-s[1],u=e[0]-s[0],c=o[1]-s[1],l=o[0]-s[0],d=c*c+l*l;let p,f=-1;0!==d&&(f=(r*c+u*l)/d),p=f<0?s:f>1?o:[s[0]+f*l,s[1]+f*c];const m=getDistance(p,e);m<a&&(a=m,i=p)}return i}function calculateRouteLength(t){if(!t||t.length<2)return 0;let e=0;for(let a=0;a<t.length-1;a++)e+=getDistance(t[a],t[a+1]);return e}function initializeCubeData(t,e,a,i,n,s){const o=calculateDistanceInDirection(parseFloat(e.longitude),parseFloat(e.latitude),a,i);t.userData={sourceLngLat:[parseFloat(e.longitude),parseFloat(e.latitude)],currentLngLat:[parseFloat(e.longitude),parseFloat(e.latitude)],initialPosition:o,targetPosition:o.slice(),busPlate:e.busPlate,busDir:n,busSpeed:e.speed,deltaPosition:[],animationNumber:[],currentStep:0,map:s},t.position.set(-t.userData.initialPosition[1],t.userData.initialPosition[0],0)}function renderUpdateCubePosition(t,e,a){if(t.userData.currentRoutePercentage>=100){if(t.userData.animationNumber.every((t=>0==t)))return void(t.parent&&(t.parent.remove(t),t.userData.removed=!0))}if(t){const[i,n]=calculateCoordinateFromDistance(t.position.y,-t.position.x,e,a);t.userData.currentLngLat=[i,n]}let i=t.userData.currentStep||0;const n=t.userData.deltaPosition,s=t.userData.animationNumber;if(!n||0===n.length)return;if(i>n.length)return;if(s.every((t=>0==t)))t.userData.targetPosition&&(t.position.x=-t.userData.targetPosition[1],t.position.y=t.userData.targetPosition[0],t.userData.animationNumber=[],t.userData.deltaPosition=[],t.userData.currentStep=0);else if(s[i]>0){const e=n[i];if(e){const a={x:t.position.x,y:t.position.y};t.position.y+=e[0],t.position.x-=e[1];const n={x:t.position.x,y:t.position.y};setCubeOrientation(t,a,n),t.userData.previousPosition=n,s[i]-=1}}else t.userData.currentStep+=1}async function handleBusPositionUpdates(t,e){const a=t.id.split("_"),i=a[a.length-1],n=a[a.length-2],s=filterCurrentBusData(e,n,i);await updateLayerCubes(t,s)}async function updateLayerCubes(t,e){if(!isValidBusData(e))return;const a=prepareCubesForUpdate(t);await updateBusesInLayer(t,e,a)}function isValidBusData(t){return!(!t||0===t.length)}function prepareCubesForUpdate(t){const e=t.cube_list.slice();return{allCubes:e,remainingCubes:e.slice()}}async function updateBusesInLayer(t,e,a){for(const i of e)isValidBusInfo(i)&&await updateBusGroup(t,i,a);removeInactiveBuses(t,a.remainingCubes)}function isValidBusInfo(t){return!(!t||!t.busInfoList)}function removeInactiveBuses(t,e){if(e.length>0)for(const a of e)t.scene.remove(a),t.cube_list=t.cube_list.filter((t=>t.userData.busPlate!==a.userData.busPlate))}async function updateBusGroup(t,e,a){const i=e.busInfoList,n=e.dir;for(const s of i){s.color=[e.color[0],e.color[1]];const i=t.cube_list.find((t=>t.userData.busPlate===s.busPlate&&t.userData.busDir===n));if(i)await updateExistingCube(i,s,t),i.userData.needsRespawn&&(t.scene.remove(i),t.cube_list=t.cube_list.filter((t=>t!==i)),InsertNewCube(t,s,n,i));else{InsertNewCube(t,s,n,i)}i&&(a.remainingCubes=a.remainingCubes.filter((t=>t.userData.busPlate!==i.userData.busPlate)))}}function InsertNewCube(t,e,a,i){addNewCubeToLayer(i,t,e,a,t.sizeX,t.sizeY,t.sizeZ,t.scaleSize,t.longitude,t.latitude)}function addNewCubeToLayer(t,e,a,i,n,s,o,r,u,c){let l=calculateDistanceInDirection(parseFloat(a.longitude),parseFloat(a.latitude),u,c);const d=createBusMaterial(i,[16777215,a.color[0],a.color[0]]),p=createBusMesh(n,s,o,r,d,e.id.split("_")[1],i);if(initializeCubeData(p,a,u,c,i,e.map),t&&t.position){let e={x:t.position.x,y:t.position.y};const a={x:-l[1],y:l[0]};setCubeOrientation(p,e,a)}e.scene.add(p),e.cube_list.push(p),e.renderer.render(e.scene,e.camera),e.map.triggerRepaint()}function updateExistingCube(t,e,a){const i=t.userData.sourceLngLat,n=[parseFloat(e.longitude),parseFloat(e.latitude)];let s=window.traffic_data;const o=t.name.split("_")[1].toString().padStart(5,"0"),r=t.name.split("_")[2];let u=s.find((t=>t.routeCode==o&&t.direction==r));if(!u||!u.coordinate)return void(t.userData.needsRespawn=!0);let c=0,l=0;if(void 0!==t.userData.currentRoutePercentage)c=t.userData.currentRoutePercentage;else{const t=findClosestIndex(u.coordinate,i),e=calculateRouteLength(u.coordinate);c=calculateRouteLength(u.coordinate.slice(0,t+1))/e*100}const d=findClosestIndex(u.coordinate,n),p=calculateRouteLength(u.coordinate);l=calculateRouteLength(u.coordinate.slice(0,d+1))/p*100;let f=l-c;let m,h=0;if(f<=0)l=c+.3,h=l;else{let t=.3;t=Math.max(.1,Math.min(2.2,f)),h=c+t}if(window.routeUtils&&window.routeUtils.getPointAtPercentage)m=window.routeUtils.getPointAtPercentage(u.coordinate,Math.min(h,100));else{const t=Math.floor((u.coordinate.length-1)*(Math.min(h,100)/100));m=u.coordinate[Math.min(t,u.coordinate.length-1)]}const D=m;t.userData.currentRoutePercentage=h,t.userData.targetRoutePercentage=l;const[g,b]=getPointsInTrafficData(a,e,t.name.split("_")[1],t.name.split("_")[2],i,D);let P="#FFFFFF";t.material&&Array.isArray(t.material)?P=`#${t.material[0].color.getHexString()}`:t.material&&t.material.color&&(P=`#${t.material.color.getHexString()}`);const B=t.userData.initialPosition,C=calculateDistanceInDirection(parseFloat(D[0]),parseFloat(D[1]),a.longitude,a.latitude),w=Math.abs(C[0]-B[0]),M=Math.abs(C[1]-B[1]);Math.sqrt(w*w+M*M)>1500?t.userData.needsRespawn=!0:(t.userData.deltaPosition.push(...g),t.userData.animationNumber.push(...b),1===t.userData.deltaPosition.length&&(t.userData.currentStep=0),t.userData.initialPosition=C,t.userData.targetPosition=C,t.userData.sourceLngLat=D,t.userData.busSpeed=e.speed,t.userData.previousPosition={x:-B[1],y:B[0]})}function GenAllCustomLayer(t,e,a={}){const{sizeX:i=3,sizeY:n=2,sizeZ:s=2,color:o=[10995687,10995687,11393254],scaleSize:r=1.4,longitude:u=113.54884,latitude:c=22.16185,rotateX:l=0,rotateY:d=0,rotateZ:p=0}=a,f=e.busInfoList,m=`${e.bus_name}_${e.dir}`,h=GenModelTransform(u,c,l,d+Math.PI,p+Math.PI),D={id:`bus_${m}`,type:"custom",renderingMode:"3d",sizeX:i,sizeY:n,sizeZ:s,scaleSize:r,longitude:u,latitude:c,onAdd:function(t,a){this.camera=new THREE.Camera,this.scene=new THREE.Scene,this.popup||(this.popup=new mapboxgl.Popup({closeButton:!1,closeOnClick:!1}));const l=createBusMaterial(e.dir,o);this.cube_list=[];for(const a of f){const o=createBusMesh(i,n,s,r,l,e.bus_name,e.dir);initializeCubeData(o,a,u,c,e.dir,t),this.cube_list.push(o)}this.cube_list.forEach((t=>this.scene.add(t))),this.map=t,this.renderer=new THREE.WebGLRenderer({canvas:t.getCanvas(),context:a,antialias:!0}),this.renderer.autoClear=!1,this.route_elements=e,initializeBusEvents(t,this,this.popup)},render:function(t,e){this.camera.projectionMatrix=calculateCameraMatrix(e,h),this.renderer.render(this.scene,this.camera),this.renderer.state.reset(),this.cube_list=this.cube_list.filter((t=>!t.userData.removed)),this.cube_list.forEach((t=>renderUpdateCubePosition(t,u,c))),this.map.triggerRepaint()},updateBusPositions:async function(t){await handleBusPositionUpdates(this,t)}};return D}export async function AddBusInMap(t,e=[],a){"undefined"!=typeof RunHistoryData&&window.showMapButton("demo-data-button");const i=await fetch(a).then((t=>t.json()));updateMaxDateTime(i);const n=[],s=e.length>0?i.filter((t=>e.includes(t.bus_name))):i;for(const e of s){const a=GenAllCustomLayer(t,e,{sizeX:6,sizeY:4,sizeZ:4,color:[16777215,e.color[0],e.color[0]],scaleSize:5});t.addLayer(a,"waterway-label"),t.moveLayer(a.id),n.push(a)}const o=await fetch(a).then((t=>t.json()));updateMaxDateTime(o),n.forEach((t=>t.updateBusPositions(o))),setInterval((async()=>{const t=await fetch(a).then((t=>t.json()));updateMaxDateTime(t),n.forEach((e=>e.updateBusPositions(t)))}),1e4)}function updateMaxDateTime(t){try{if(!t||!Array.isArray(t)||0===t.length)return;let e=null;for(const a of t)if(a.dt){const t=new Date(a.dt);(!e||t>e)&&(e=t)}e&&window.updateBusDateTime&&window.updateBusDateTime(e)}catch(t){}}